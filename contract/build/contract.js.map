{"version":3,"file":"contract.js","sources":["../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-contract.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/collections/vector.js","../src/contract.ts"],"sourcesContent":["export function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen(target) {\n    return class extends target {\n        static _init() {\n            // @ts-ignore\n            let args = target.deserializeArgs();\n            let ret = new target(args);\n            // @ts-ignore\n            ret.init();\n            // @ts-ignore\n            ret.serialize();\n            return ret;\n        }\n        static _get() {\n            let ret = Object.create(target.prototype);\n            return ret;\n        }\n    };\n}\n","const U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\nexport function panic(msg) {\n    if (msg !== undefined) {\n        env.panic(msg);\n    }\n    else {\n        env.panic();\n    }\n}\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function jsvmAccountId() {\n    env.jsvm_account_id(0);\n    return env.read_register(0);\n}\nexport function jsvmJsContractName() {\n    env.jsvm_js_contract_name(0);\n    return env.read_register(0);\n}\nexport function jsvmMethodName() {\n    env.jsvm_method_name(0);\n    return env.read_register(0);\n}\nexport function jsvmArgs() {\n    env.jsvm_args(0);\n    return env.read_register(0);\n}\nexport function jsvmStorageWrite(key, value) {\n    let exist = env.jsvm_storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageRead(key) {\n    let exist = env.jsvm_storage_read(key, 0);\n    if (exist === 1n) {\n        return env.read_register(0);\n    }\n    return null;\n}\nexport function jsvmStorageRemove(key) {\n    let exist = env.jsvm_storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageHasKey(key) {\n    let exist = env.jsvm_storage_has_key(key);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmCallRaw(contractName, method, args) {\n    env.jsvm_call(contractName, method, JSON.stringify(args), 0);\n    return env.read_register(0);\n}\nexport function jsvmCall(contractName, method, args) {\n    let ret = jsvmCallRaw(contractName, method, args);\n    if (ret === null) {\n        return ret;\n    }\n    return JSON.parse(ret);\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function jsvmValueReturn(value) {\n    env.jsvm_value_return(value);\n}\n// Standalone only APIs\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        panic(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport class NearContract {\n    deserialize() {\n        const rawState = near.storageRead(\"STATE\");\n        if (rawState) {\n            const state = JSON.parse(rawState);\n            // reconstruction of the contract class object from plain object\n            let c = this.default();\n            Object.assign(this, state);\n            for (const item in c) {\n                if (c[item].constructor?.deserialize !== undefined) {\n                    this[item] = c[item].constructor.deserialize(this[item]);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Contract state is empty\");\n        }\n    }\n    serialize() {\n        near.storageWrite(\"STATE\", JSON.stringify(this));\n    }\n    static deserializeArgs() {\n        let args = near.input();\n        return JSON.parse(args || \"{}\");\n    }\n    static serializeReturn(ret) {\n        return JSON.stringify(ret);\n    }\n    init() { }\n}\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    len() {\n        return this.length;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.len()) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import { NearContract, NearBindgen, near, call, view, Vector } from 'near-sdk-js'\nimport { sha256 } from 'near-sdk-js/lib/api';\n\n@NearBindgen \nclass ZkContract extends NearContract{\n  applications: Vector;\n\n  constructor() {\n    super();\n  }\n\n  default() {\n    this.applications = new Vector('unique-id-vector1');\n    return new ZkContract();\n  }\n\n  @view\n  createTree(witness: number[]): string[] {\n    var merkleTree: string[] = [];\n    const size: number = witness.length;\n    \n    for(var i: number = 0; i<size; i++){\n        merkleTree.push(sha256(witness[i] + \"\"));\n    }\n    \n    for (var i: number = 0; i<size; i++) {\n        merkleTree = [\"\"].concat(merkleTree);\n    }\n    \n    for(var i: number = size - 1; i>0; i--){\n        merkleTree[i] = sha256(merkleTree[i*2] + merkleTree[i*2 + 1]);\n    }\n    \n    return merkleTree;\n  }  \n\n  @view\n  createWitness(user: number[], condition: number[]) : number[]{\n    var witness: number[] = [0];\n\n    var age: number = user[0];\n    var income: number = user[1];\n    var score: number = user[2];\n    \n    var c1: number = condition[0];\n    var c2: number = condition[1];\n    var c3: number = condition[2];\n    \n    if(age >= c1) {\n        witness.push(1)\n    } else{\n        witness.push(0);\n    } \n    \n    if(income >= c2) {\n        witness.push(1)\n    } else{\n        witness.push(0);\n    } \n    \n    if(score >= c3) {\n        witness.push(1)\n    } else{\n        witness.push(0);\n    } \n\n    //return user;\n    //witness.push(0)\n    \n    return witness;\n  }\n\n  @view\n  getProof(args: number[]): string[]{\n    var proof: string[] = [];\n\n    var user: number[] = args['args']['user'];\n    var condition: number[] = args['args']['condition'];\n    \n    var witness: number[] = this.createWitness(user, condition);\n    \n    var tree: string[] = this.createTree(witness);\n    \n    /*var j: number;\n    for(var i: number = 0; user.length; i++) {\n        j = i + 1;\n        proof.push(tree[j]);\n        j = (i+1) * 2;\n        while(true){\n        proof.push(tree[j]);\n        if(j*2 < tree.length) {\n            j = j*2;\n        }else{\n            break;\n        }\n        }\n        proof.push(tree[j+1]);\n    }*/\n    //return witness;\n    return tree;\n  }\n\n  @view \n  verifyProofAndUpdate(args: string[]) : string[] {\n\n    var proof: string[] = args['args']['proof'];\n\n    var mobile: string = args['args']['mobile'];\n    var name: string = args['args']['name'];\n\n    var witness: number[] = [0, 1, 1, 1];\n    \n    var tree: string[] = this.createTree(witness);\n    \n    var status: boolean =  tree[1].normalize().substring(0,1) === proof[1].normalize().substring(0,1);\n\n    return [name, mobile, status+\"\"];\n\n  }  \n}\n"],"names":["view","target","key","descriptor","NearBindgen","_init","args","deserializeArgs","ret","init","serialize","_get","Object","create","prototype","U64_MAX","EVICTED_REGISTER","sha256","value","env","read_register","storageRead","storage_read","storageGetEvicted","input","PromiseResult","storageWrite","exist","storage_write","storageRemove","storage_remove","NearContract","deserialize","rawState","near","state","JSON","parse","c","default","assign","item","constructor","undefined","Error","stringify","serializeReturn","u8ArrayToBytes","array","e","String","fromCharCode","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","prefix","index","data","Uint32Array","Uint8Array","buffer","Vector","length","len","isEmpty","get","storageKey","swapRemove","pop","last","push","element","lastIndex","lastKey","replace","extend","elements","Symbol","iterator","VectorIterator","clear","i","toArray","v","vector","current","next","done","ZkContract","applications","createTree","witness","merkleTree","size","concat","createWitness","user","condition","age","income","score","c1","c2","c3","getProof","tree","verifyProofAndUpdate","proof","mobile","name","status","normalize","substring"],"mappings":"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"}